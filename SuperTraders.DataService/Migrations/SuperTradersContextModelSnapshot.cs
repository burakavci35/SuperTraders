// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SuperTraders.DataService.Models;

namespace SuperTraders.DataService.Migrations
{
    [DbContext(typeof(SuperTradersContext))]
    partial class SuperTradersContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SuperTraders.DataService.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<decimal>("TotalBalance")
                        .HasColumnType("numeric");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("SuperTraders.DataService.Models.AccountShare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("Symbol")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("AccountShare");
                });

            modelBuilder.Entity("SuperTraders.DataService.Models.Share", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("LastUpDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Symbol")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Share");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastUpDateTime = new DateTime(2022, 1, 17, 8, 22, 15, 793, DateTimeKind.Local).AddTicks(3299),
                            Rate = 10.56m,
                            Symbol = "BTC"
                        },
                        new
                        {
                            Id = 2,
                            LastUpDateTime = new DateTime(2022, 1, 17, 7, 22, 15, 794, DateTimeKind.Local).AddTicks(1359),
                            Rate = 11.56m,
                            Symbol = "USD"
                        },
                        new
                        {
                            Id = 3,
                            LastUpDateTime = new DateTime(2022, 1, 17, 6, 22, 15, 794, DateTimeKind.Local).AddTicks(1374),
                            Rate = 12.56m,
                            Symbol = "TRY"
                        },
                        new
                        {
                            Id = 4,
                            LastUpDateTime = new DateTime(2022, 1, 17, 5, 22, 15, 794, DateTimeKind.Local).AddTicks(1377),
                            Rate = 13.56m,
                            Symbol = "EUR"
                        });
                });

            modelBuilder.Entity("SuperTraders.DataService.Models.AccountShare", b =>
                {
                    b.HasOne("SuperTraders.DataService.Models.Account", "Account")
                        .WithMany("AccountShareList")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SuperTraders.DataService.Models.Account", b =>
                {
                    b.Navigation("AccountShareList");
                });
#pragma warning restore 612, 618
        }
    }
}
